# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Yampl < Formula
  desc ""
  homepage ""
  version "0.3.5"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/clevyr/yampl/releases/download/v0.3.5/yampl_Darwin_x86_64.tar.gz"
      sha256 "66ad961e7392172722d20a0398e7f9f08b9d2a79a475dfe0e4fe0fe1c5af8b3e"

      def install
        bin.install "yampl"
        output = Utils.safe_popen_read("#{bin}/yampl", "--completion=bash")
        (bash_completion/"yampl").write output
        output = Utils.safe_popen_read("#{bin}/yampl", "--completion=zsh")
        (zsh_completion/"_yampl").write output
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/clevyr/yampl/releases/download/v0.3.5/yampl_Darwin_arm64.tar.gz"
      sha256 "3a82df8882f433ff597ef900363b61dec860714d97f1a516091fe61466174d9d"

      def install
        bin.install "yampl"
        output = Utils.safe_popen_read("#{bin}/yampl", "--completion=bash")
        (bash_completion/"yampl").write output
        output = Utils.safe_popen_read("#{bin}/yampl", "--completion=zsh")
        (zsh_completion/"_yampl").write output
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/clevyr/yampl/releases/download/v0.3.5/yampl_Linux_arm64.tar.gz"
      sha256 "c64af24ce8068c157056fdaafa979f0a1cceef7d3794eeefbdc2d0ccdf2cc64b"

      def install
        bin.install "yampl"
        output = Utils.safe_popen_read("#{bin}/yampl", "--completion=bash")
        (bash_completion/"yampl").write output
        output = Utils.safe_popen_read("#{bin}/yampl", "--completion=zsh")
        (zsh_completion/"_yampl").write output
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/clevyr/yampl/releases/download/v0.3.5/yampl_Linux_x86_64.tar.gz"
      sha256 "34e3785d2f4ad1c8ba917970eaa1c39df03b17bb0d0871ba0fe6d869191add3d"

      def install
        bin.install "yampl"
        output = Utils.safe_popen_read("#{bin}/yampl", "--completion=bash")
        (bash_completion/"yampl").write output
        output = Utils.safe_popen_read("#{bin}/yampl", "--completion=zsh")
        (zsh_completion/"_yampl").write output
      end
    end
  end
end
