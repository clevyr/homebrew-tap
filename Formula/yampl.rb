# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Yampl < Formula
  desc ""
  homepage ""
  version "0.1.0"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/clevyr/go-yampl/releases/download/v0.1.0/yampl_0.1.0_Darwin_arm64.tar.gz"
      sha256 "03aa507b51b110538667f03e86828e764ac0318375dba7f085cc61789a5042a5"

      def install
        bin.install "yampl"
        output = Utils.safe_popen_read("#{bin}/yampl", "--completion=bash")
        (bash_completion/"yampl").write output
        output = Utils.safe_popen_read("#{bin}/yampl", "--completion=zsh")
        (zsh_completion/"_yampl").write output
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/clevyr/go-yampl/releases/download/v0.1.0/yampl_0.1.0_Darwin_x86_64.tar.gz"
      sha256 "dd4aa2882899fd2e47b7daee14d56653f88b357d3d050fcf7b204d190907fc99"

      def install
        bin.install "yampl"
        output = Utils.safe_popen_read("#{bin}/yampl", "--completion=bash")
        (bash_completion/"yampl").write output
        output = Utils.safe_popen_read("#{bin}/yampl", "--completion=zsh")
        (zsh_completion/"_yampl").write output
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/clevyr/go-yampl/releases/download/v0.1.0/yampl_0.1.0_Linux_arm64.tar.gz"
      sha256 "2bdbea1197e3c102c30892da0fbaeafbe0e9441cb13330e726a0855d469ae5a7"

      def install
        bin.install "yampl"
        output = Utils.safe_popen_read("#{bin}/yampl", "--completion=bash")
        (bash_completion/"yampl").write output
        output = Utils.safe_popen_read("#{bin}/yampl", "--completion=zsh")
        (zsh_completion/"_yampl").write output
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/clevyr/go-yampl/releases/download/v0.1.0/yampl_0.1.0_Linux_x86_64.tar.gz"
      sha256 "69bee847fc8d97529957a653ffe141909a1468d9bedfa68464649764bfcaab41"

      def install
        bin.install "yampl"
        output = Utils.safe_popen_read("#{bin}/yampl", "--completion=bash")
        (bash_completion/"yampl").write output
        output = Utils.safe_popen_read("#{bin}/yampl", "--completion=zsh")
        (zsh_completion/"_yampl").write output
      end
    end
  end
end
