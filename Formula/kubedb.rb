# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kubedb < Formula
  desc ""
  homepage ""
  version "1.4.1"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/clevyr/kubedb/releases/download/v1.4.1/kubedb_1.4.1_Darwin_arm64.tar.gz"
      sha256 "8eef7f2ac8eedd4c54e205a086c6e983ecfce48869e04d2dab815229cf352eab"

      def install
        bin.install "kubedb"
        output = Utils.safe_popen_read("#{bin}/kubedb", "completion", "bash")
        (bash_completion/"kubedb").write output
        output = Utils.safe_popen_read("#{bin}/kubedb", "completion", "zsh")
        (zsh_completion/"_kubedb").write output
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/clevyr/kubedb/releases/download/v1.4.1/kubedb_1.4.1_Darwin_x86_64.tar.gz"
      sha256 "3458de4df7421f59032fe46d226823b12f31be58aa448dc8ab5c50894742eff2"

      def install
        bin.install "kubedb"
        output = Utils.safe_popen_read("#{bin}/kubedb", "completion", "bash")
        (bash_completion/"kubedb").write output
        output = Utils.safe_popen_read("#{bin}/kubedb", "completion", "zsh")
        (zsh_completion/"_kubedb").write output
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/clevyr/kubedb/releases/download/v1.4.1/kubedb_1.4.1_Linux_x86_64.tar.gz"
      sha256 "098618b0281d0ce7617a54497a6bb4024e6e72dfb3b30f2536430d7335d728a6"

      def install
        bin.install "kubedb"
        output = Utils.safe_popen_read("#{bin}/kubedb", "completion", "bash")
        (bash_completion/"kubedb").write output
        output = Utils.safe_popen_read("#{bin}/kubedb", "completion", "zsh")
        (zsh_completion/"_kubedb").write output
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/clevyr/kubedb/releases/download/v1.4.1/kubedb_1.4.1_Linux_arm64.tar.gz"
      sha256 "05a59ccb6eaa90cba11bc69ec4488e39baf59bc458783de7cd5946075fc9454d"

      def install
        bin.install "kubedb"
        output = Utils.safe_popen_read("#{bin}/kubedb", "completion", "bash")
        (bash_completion/"kubedb").write output
        output = Utils.safe_popen_read("#{bin}/kubedb", "completion", "zsh")
        (zsh_completion/"_kubedb").write output
      end
    end
  end
end
