# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kubedb < Formula
  desc ""
  homepage ""
  version "1.4.0"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/clevyr/kubedb/releases/download/v1.4.0/kubedb_1.4.0_Darwin_arm64.tar.gz"
      sha256 "5b44f8be25829e848426e825cfa3864e2401c78c6cb192cb71663d6dfe6c7a18"

      def install
        bin.install "kubedb"
        output = Utils.safe_popen_read("#{bin}/kubedb", "completion", "bash")
        (bash_completion/"kubedb").write output
        output = Utils.safe_popen_read("#{bin}/kubedb", "completion", "zsh")
        (zsh_completion/"_kubedb").write output
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/clevyr/kubedb/releases/download/v1.4.0/kubedb_1.4.0_Darwin_x86_64.tar.gz"
      sha256 "62e20d5eca0542a68c684bf78b3fc0d2016b778d17a939e9fd1e8c4f97fc72ac"

      def install
        bin.install "kubedb"
        output = Utils.safe_popen_read("#{bin}/kubedb", "completion", "bash")
        (bash_completion/"kubedb").write output
        output = Utils.safe_popen_read("#{bin}/kubedb", "completion", "zsh")
        (zsh_completion/"_kubedb").write output
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/clevyr/kubedb/releases/download/v1.4.0/kubedb_1.4.0_Linux_x86_64.tar.gz"
      sha256 "5eb8754ad6b63041699af16feb91483de8a5087ae8587f0968f75c98e298cde9"

      def install
        bin.install "kubedb"
        output = Utils.safe_popen_read("#{bin}/kubedb", "completion", "bash")
        (bash_completion/"kubedb").write output
        output = Utils.safe_popen_read("#{bin}/kubedb", "completion", "zsh")
        (zsh_completion/"_kubedb").write output
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/clevyr/kubedb/releases/download/v1.4.0/kubedb_1.4.0_Linux_arm64.tar.gz"
      sha256 "7e1dd73d2088dbfafe789062f643a67b0b19bb71f684c3366b03b376d83a4f4e"

      def install
        bin.install "kubedb"
        output = Utils.safe_popen_read("#{bin}/kubedb", "completion", "bash")
        (bash_completion/"kubedb").write output
        output = Utils.safe_popen_read("#{bin}/kubedb", "completion", "zsh")
        (zsh_completion/"_kubedb").write output
      end
    end
  end
end
