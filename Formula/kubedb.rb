# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kubedb < Formula
  desc ""
  homepage ""
  version "1.4.7"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/clevyr/kubedb/releases/download/v1.4.7/kubedb_1.4.7_Darwin_x86_64.tar.gz"
      sha256 "192940bac64b4e41c6ba43676c13724d171f0962fbaac1fe383b20d57c2062c8"

      def install
        bin.install "kubedb"
        output = Utils.safe_popen_read("#{bin}/kubedb", "completion", "bash")
        (bash_completion/"kubedb").write output
        output = Utils.safe_popen_read("#{bin}/kubedb", "completion", "zsh")
        (zsh_completion/"_kubedb").write output
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/clevyr/kubedb/releases/download/v1.4.7/kubedb_1.4.7_Darwin_arm64.tar.gz"
      sha256 "c520aeb163b5bd15298d3b457bea11c4d4c701835d3a0bea38541658c604eb8e"

      def install
        bin.install "kubedb"
        output = Utils.safe_popen_read("#{bin}/kubedb", "completion", "bash")
        (bash_completion/"kubedb").write output
        output = Utils.safe_popen_read("#{bin}/kubedb", "completion", "zsh")
        (zsh_completion/"_kubedb").write output
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/clevyr/kubedb/releases/download/v1.4.7/kubedb_1.4.7_Linux_x86_64.tar.gz"
      sha256 "43ed6fa3eaf39ad35a792ab97d4ba71b48ca4b219bbc2156649ef0f4ccdca733"

      def install
        bin.install "kubedb"
        output = Utils.safe_popen_read("#{bin}/kubedb", "completion", "bash")
        (bash_completion/"kubedb").write output
        output = Utils.safe_popen_read("#{bin}/kubedb", "completion", "zsh")
        (zsh_completion/"_kubedb").write output
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/clevyr/kubedb/releases/download/v1.4.7/kubedb_1.4.7_Linux_arm64.tar.gz"
      sha256 "6fde30532b92ef3579bc33514b2fb386bb88d4c17414ef6850b1a149ee16175b"

      def install
        bin.install "kubedb"
        output = Utils.safe_popen_read("#{bin}/kubedb", "completion", "bash")
        (bash_completion/"kubedb").write output
        output = Utils.safe_popen_read("#{bin}/kubedb", "completion", "zsh")
        (zsh_completion/"_kubedb").write output
      end
    end
  end
end
