# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kubedb < Formula
  desc ""
  homepage ""
  version "1.3.7"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/clevyr/kubedb/releases/download/v1.3.7/kubedb_1.3.7_Darwin_arm64.tar.gz"
      sha256 "0cbf023035b645eec2666ec908efa1e99e3102ce4d80a0bc2cd24a03c78dc6d7"

      def install
        bin.install "kubedb"
        output = Utils.safe_popen_read("#{bin}/kubedb", "completion", "bash")
        (bash_completion/"kubedb").write output
        output = Utils.safe_popen_read("#{bin}/kubedb", "completion", "zsh")
        (zsh_completion/"_kubedb").write output
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/clevyr/kubedb/releases/download/v1.3.7/kubedb_1.3.7_Darwin_x86_64.tar.gz"
      sha256 "9a4a6a48b6a5e4a1a774a575769a1423523573bee3ea0d4675f1a5dc846a93af"

      def install
        bin.install "kubedb"
        output = Utils.safe_popen_read("#{bin}/kubedb", "completion", "bash")
        (bash_completion/"kubedb").write output
        output = Utils.safe_popen_read("#{bin}/kubedb", "completion", "zsh")
        (zsh_completion/"_kubedb").write output
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/clevyr/kubedb/releases/download/v1.3.7/kubedb_1.3.7_Linux_arm64.tar.gz"
      sha256 "08ecb43f1dff197fb9c1e639aacfc0a5bcdc2e48875df52fec4a92f13640da7b"

      def install
        bin.install "kubedb"
        output = Utils.safe_popen_read("#{bin}/kubedb", "completion", "bash")
        (bash_completion/"kubedb").write output
        output = Utils.safe_popen_read("#{bin}/kubedb", "completion", "zsh")
        (zsh_completion/"_kubedb").write output
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/clevyr/kubedb/releases/download/v1.3.7/kubedb_1.3.7_Linux_x86_64.tar.gz"
      sha256 "159b749ce5c57404ef20d8e552fea477d52abf969bbf29a23f23fcdd934e8e08"

      def install
        bin.install "kubedb"
        output = Utils.safe_popen_read("#{bin}/kubedb", "completion", "bash")
        (bash_completion/"kubedb").write output
        output = Utils.safe_popen_read("#{bin}/kubedb", "completion", "zsh")
        (zsh_completion/"_kubedb").write output
      end
    end
  end
end
